print("Алгоритм линейного поиска")
# Алгоритм линейного поиска определяется на таких структурах данных
# как массивы, списки и надстройки над ними — очередь и стек.

# Такой алгоритм является «решением в лоб» и сводится к перебору одного элемента за другим
# и операции сравнения на каждом.
# Как правило, линейный поиск применяется к неотсортированным структурам.

# Пусть на вход программы поступает массив из произвольного количества целых чисел и еще одно целое число,
# которое будем проверять на вхождение в этот массив.
# Задача состоит в том, чтобы вернуть индекс первого вхождения элемента,
# если он входит в него, и False, если не входит.


def find(array, element):
    for i, a in enumerate(array):
        if a == element:
            return i
    return False


array = list(map(int, input("Enter array: ").split()))
element = int(input("Enter element: "))

print(find(array, element))
# В худшем случае этот алгоритм работает за O(n),
# потому что, если элемент не входит в массив, придется провести n сравнений.
# Все они не увенчаются успехом.

# Линейный алгоритм поиска может применяться для следующих целей:
#         Нахождение минимального/максимального элемента.
#         Поиск элемента с определенным значением.
#         Количество вхождений элемента в массив.
#         Количество элементов больше заданного.

# В худшем случае этот алгоритм работает за O(n),
# потому что, если элемент не входит в массив, придется провести n сравнений.
# Все они не увенчаются успехом.

# Линейный алгоритм поиска может применяться для следующих целей:
#         Нахождение минимального/максимального элемента.
#         Поиск элемента с определенным значением.
#         Количество вхождений элемента в массив.
#         Количество элементов больше заданного.